<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
						 xmlns:ia="using:Avalonia.Xaml.Interactivity"
						 xmlns:iaCore="using:Avalonia.Xaml.Interactions.Core"
						 xmlns:appViewModels="clr-namespace:CarinaStudio.ULogViewer.ViewModels;assembly=ULogViewer"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="CarinaStudio.ULogViewer.Controls.SessionView">

	<!-- Data templates -->
	<UserControl.DataTemplates>

		<!-- Log header -->
		<DataTemplate DataType="{x:Type appViewModels:DisplayableLogProperty}">
			<Border BorderBrush="{StaticResource Brush.SessionView.LogHeader.Separator}" BorderThickness="1,0,0,0" HorizontalAlignment="Stretch" Margin="{StaticResource Thickness.SessionView.LogHeader.Margin}" Padding="{StaticResource Thickness.SessionView.LogHeader.Padding}">
				<TextBlock Text="{Binding DisplayName}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>
			</Border>
		</DataTemplate>
		
	</UserControl.DataTemplates>

	<!-- Resources -->
	<UserControl.Resources>

		<!-- Other actions menu -->
		<ContextMenu x:Key="otherActionsMenu">
			<MenuItem Header="{DynamicResource String.SessionView.AppOptions}"/>
			<MenuItem Header="{DynamicResource String.SessionView.AppInfo}"/>
		</ContextMenu>
		
	</UserControl.Resources>
	
	<!-- Content -->
	<Grid RowDefinitions="Auto,Auto,*,Auto">

		<!-- Columns -->
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition MaxWidth="{StaticResource Double.SessionView.SidePanel.MaxWidth}" MinWidth="{StaticResource Double.SessionView.SidePanel.MinWidth}" Width="0"/>
		</Grid.ColumnDefinitions>

		<!-- Toolbar -->
		<Grid ColumnDefinitions="Auto,*,Auto" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Margin="{StaticResource Thickness.SessionView.ToolBar.Padding}">

			<!-- Log actions -->
			<StackPanel Orientation="Horizontal">

				<!-- Select log profiles -->
				<Button Classes="SessionView_ToolBar_Button" Command="{Binding $parent[UserControl].SetLogProfileCommand}" ToolTip.Tip="{DynamicResource String.SessionView.SetLogProfile}">
					<Border Classes="SessionView_ToolBar_Button_Icon">
						<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon" Drawing="{StaticResource Drawing.LogProfiles}"/>
					</Border>
				</Button>

				<!-- Set working directory -->
				<Button Classes="SessionView_ToolBar_Button" Command="{Binding $parent[UserControl].SetWorkingDirectoryCommand}" ToolTip.Tip="{DynamicResource String.SessionView.SetWorkingDirectory}">
					<Border Classes="SessionView_ToolBar_Button_Icon">
						<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon" Drawing="{StaticResource Drawing.AddFolder}"/>
					</Border>
				</Button>

				<!-- Add file -->
				<Button Classes="SessionView_ToolBar_Button" Command="{Binding $parent[UserControl].AddLogFilesCommand}" ToolTip.Tip="{DynamicResource String.SessionView.AddLogFiles}">
					<Border Classes="SessionView_ToolBar_Button_Icon">
						<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon" Drawing="{StaticResource Drawing.AddFile}"/>
					</Border>
				</Button>

				<!-- Separator -->
				<Separator Classes="SessionView_ToolBar_Separator"/>

				<!-- Reload logs -->
				<Button Classes="SessionView_ToolBar_Button" Command="{Binding ReloadLogsCommand}" ToolTip.Tip="{DynamicResource String.SessionView.ReloadLogs}">
					<Border Classes="SessionView_ToolBar_Button_Icon">
						<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon" Drawing="{StaticResource Drawing.Refresh}"/>
					</Border>
				</Button>

				<!-- Scroll to latest log -->
				<ToggleButton Classes="SessionView_ToolBar_Button" IsChecked="{Binding $parent[UserControl].IsScrollingToLatestLogNeeded, Mode=TwoWay}" IsEnabled="{Binding $parent[UserControl].HasLogProfile}" ToolTip.Tip="{DynamicResource String.SessionView.ScrollToLatestLog}">
					<Border Classes="SessionView_ToolBar_Button_Icon">
						<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon" Drawing="{StaticResource Drawing.Scrolling}"/>
					</Border>
				</ToggleButton>

				<!-- Pause/resume -->
				<Button Classes="SessionView_ToolBar_Button" Command="{Binding PauseResumeLogsReadingCommand}" ToolTip.Tip="{DynamicResource String.SessionView.PauseResumeLogsReading}">
					<Border Classes="SessionView_ToolBar_Button_Icon">
						<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon">
							<ia:Interaction.Behaviors>
								<iaCore:DataTriggerBehavior Binding="{Binding IsLogsReadingPaused}" ComparisonCondition="Equal" Value="True">
									<iaCore:ChangePropertyAction PropertyName="Drawing" Value="{StaticResource Drawing.Play}"/>
								</iaCore:DataTriggerBehavior>
								<iaCore:DataTriggerBehavior Binding="{Binding IsLogsReadingPaused}" ComparisonCondition="Equal" Value="False">
									<iaCore:ChangePropertyAction PropertyName="Drawing" Value="{StaticResource Drawing.Pause}"/>
								</iaCore:DataTriggerBehavior>
							</ia:Interaction.Behaviors>
						</DrawingPresenter>
					</Border>
				</Button>

				<!-- Separator -->
				<Separator Classes="SessionView_ToolBar_Separator"/>
				
			</StackPanel>

			<!-- Log filters -->
			<Grid ColumnDefinitions="Auto,Auto,Auto,Auto,*,Auto" Grid.Column="1" HorizontalAlignment="Stretch" Margin="{StaticResource Thickness.SessionView.ToolBar.LogFilters.Padding}" VerticalAlignment="Stretch">

				<!-- Level filter -->
				<ComboBox Name="logLevelFilterComboBox" Foreground="{DynamicResource Brush.DisplayableLog.Level.Undefined}" IsEnabled="{Binding $parent[UserControl].HasLogProfile}" Margin="{StaticResource Thickness.SessionView.ToolBar.LogLevelFilter.Margin}" SelectedIndex="0" SelectionChanged="OnLogLevelFilterComboBoxSelectionChanged" VerticalAlignment="Center" Width="{StaticResource Double.SessionView.ToolBar.LogLevelFilter.Width}">
					<ia:Interaction.Behaviors>
						<iaCore:DataTriggerBehavior Binding="{Binding $self.SelectedItem.Tag}" ComparisonCondition="Equal" Value="Undefined">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource Brush.DisplayableLog.Level.Undefined}"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $self.SelectedItem.Tag}" ComparisonCondition="Equal" Value="Info">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource Brush.DisplayableLog.Level.Info}"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $self.SelectedItem.Tag}" ComparisonCondition="Equal" Value="Verbose">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource Brush.DisplayableLog.Level.Verbose}"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $self.SelectedItem.Tag}" ComparisonCondition="Equal" Value="Debug">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource Brush.DisplayableLog.Level.Debug}"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $self.SelectedItem.Tag}" ComparisonCondition="Equal" Value="Warn">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource Brush.DisplayableLog.Level.Warn}"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $self.SelectedItem.Tag}" ComparisonCondition="Equal" Value="Error">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource Brush.DisplayableLog.Level.Error}"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $self.SelectedItem.Tag}" ComparisonCondition="Equal" Value="Fatal">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource Brush.DisplayableLog.Level.Fatal}"/>
						</iaCore:DataTriggerBehavior>
					</ia:Interaction.Behaviors>
					<ComboBoxItem Content="{DynamicResource String.SessionView.AllLogLevels}" Foreground="{DynamicResource Brush.DisplayableLog.Level.Undefined}" Tag="Undefined"/>
					<ComboBoxItem Content="{DynamicResource String.LogLevel.Info}" Foreground="{DynamicResource Brush.DisplayableLog.Level.Info}" Tag="Info"/>
					<ComboBoxItem Content="{DynamicResource String.LogLevel.Verbose}" Foreground="{DynamicResource Brush.DisplayableLog.Level.Verbose}" Tag="Verbose"/>
					<ComboBoxItem Content="{DynamicResource String.LogLevel.Debug}" Foreground="{DynamicResource Brush.DisplayableLog.Level.Debug}" Tag="Debug"/>
					<ComboBoxItem Content="{DynamicResource String.LogLevel.Warn}" Foreground="{DynamicResource Brush.DisplayableLog.Level.Warn}" Tag="Warn"/>
					<ComboBoxItem Content="{DynamicResource String.LogLevel.Error}" Foreground="{DynamicResource Brush.DisplayableLog.Level.Error}" Tag="Error"/>
					<ComboBoxItem Content="{DynamicResource String.LogLevel.Fatal}" Foreground="{DynamicResource Brush.DisplayableLog.Level.Fatal}" Tag="Fatal"/>
				</ComboBox>

				<!-- PID filter -->
				<TextBox Name="logProcessIdFilterTextBox" Grid.Column="1" IsEnabled="{Binding $parent[UserControl].HasLogProfile}" IsVisible="False" PropertyChanged="OnLogTextFilterTextBoxPropertyChanged" Margin="{StaticResource Thickness.SessionView.ToolBar.LogProcessIdFilter.Margin}" VerticalAlignment="Center" Watermark="{DynamicResource String.DisplayableLogProperty.ProcessId}" Width="{StaticResource Double.SessionView.ToolBar.LogProcessIdFilter.Width}"/>

				<!-- TID filter -->
				<TextBox Name="logThreadIdFilterTextBox" Grid.Column="2" IsEnabled="{Binding $parent[UserControl].HasLogProfile}" IsVisible="False" PropertyChanged="OnLogTextFilterTextBoxPropertyChanged" Margin="{StaticResource Thickness.SessionView.ToolBar.LogProcessIdFilter.Margin}" VerticalAlignment="Center" Watermark="{DynamicResource String.DisplayableLogProperty.ThreadId}" Width="{StaticResource Double.SessionView.ToolBar.LogProcessIdFilter.Width}"/>

				<!-- Filters combinatin mode -->
				<Button Classes="SessionView_ToolBar_Button" Command="{Binding $parent[UserControl].SwitchLogFiltersCombinationModeCommand}" Grid.Column="3" ToolTip.Tip="{DynamicResource String.SessionView.LogFiltersCombinationMode}">
					<Border Classes="SessionView_ToolBar_Button_Icon">
						<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon">
							<ia:Interaction.Behaviors>
								<iaCore:DataTriggerBehavior Binding="{Binding LogFiltersCombinationMode}" ComparisonCondition="Equal" Value="Intersection">
									<iaCore:ChangePropertyAction PropertyName="Drawing" Value="{StaticResource Drawing.Intersection}"/>
								</iaCore:DataTriggerBehavior>
								<iaCore:DataTriggerBehavior Binding="{Binding LogFiltersCombinationMode}" ComparisonCondition="Equal" Value="Union">
									<iaCore:ChangePropertyAction PropertyName="Drawing" Value="{StaticResource Drawing.Union}"/>
								</iaCore:DataTriggerBehavior>
							</ia:Interaction.Behaviors>
						</DrawingPresenter>
					</Border>
				</Button>
				
				<!-- Text filter -->
				<TextBox Name="logTextFilterTextBox" Grid.Column="4" IsEnabled="{Binding $parent[UserControl].HasLogProfile}" Margin="{StaticResource Thickness.SessionView.ToolBar.LogTextFilter.Margin}" PropertyChanged="OnLogTextFilterTextBoxPropertyChanged" VerticalAlignment="Center" Watermark="{DynamicResource String.SessionView.LogTextFilterHint}">
					<ia:Interaction.Behaviors>
						<iaCore:DataTriggerBehavior Binding="{Binding $parent[UserControl].IsLogTextFilterValid}" ComparisonCondition="Equal" Value="True">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource TextControlForeground}"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $parent[UserControl].IsLogTextFilterValid}" ComparisonCondition="Equal" Value="False">
							<iaCore:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource Brush.SessionView.LogTextFilter.Foreground.Error}"/>
						</iaCore:DataTriggerBehavior>
					</ia:Interaction.Behaviors>
				</TextBox>

				<!-- Filter actions -->
				<StackPanel Grid.Column="5" Orientation="Horizontal">

					<!-- Reset log filters -->
					<Button Classes="SessionView_ToolBar_Button" Command="{Binding $parent[UserControl].ResetLogFiltersCommand}" ToolTip.Tip="{DynamicResource String.SessionView.ResetLogFilters}">
						<Border Classes="SessionView_ToolBar_Button_Icon">
							<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon" Drawing="{StaticResource Drawing.Delete}"/>
						</Border>
					</Button>

				</StackPanel>
				
			</Grid>

			<!-- Other actions -->
			<StackPanel Grid.Column="2" Orientation="Horizontal">

				<!-- Separator -->
				<Separator Classes="SessionView_ToolBar_Separator"/>

				<!-- Other actions -->
				<Button Classes="SessionView_ToolBar_Button" Command="{Binding $parent[UserControl].ShowOtherActionsCommand}" ToolTip.Tip="{DynamicResource String.SessionView.OtherActions}">
					<Border Classes="SessionView_ToolBar_Button_Icon">
						<DrawingPresenter Classes="SessionView_ToolBar_Button_Icon" Drawing="{StaticResource Drawing.OtherActions}"/>
					</Border>
				</Button>

			</StackPanel>
			
		</Grid>

		<!-- Progress bar -->
		<ProgressBar Grid.Row="1" Opacity="0"/>
		<ProgressBar Grid.ColumnSpan="3" Grid.Row="1" IsIndeterminate="True" IsVisible="{Binding IsProcessingLogs}"/>

		<!-- Logs -->
		<Grid Grid.Row="2" RowDefinitions="Auto,*">

			<!-- Header -->
			<Grid Name="logHeaderContainer" Background="{StaticResource Brush.SessionView.LogHeader.Background}">
				<TextBlock Margin="{StaticResource Thickness.SessionView.LogHeader.Margin}" Padding="{StaticResource Thickness.SessionView.LogHeader.Padding}" Text=" "/>
				<Grid Name="logHeaderGrid"/>
			</Grid>

			<!-- ListBox -->
			<ListBox Name="logListBox" AutoScrollToSelectedItem="False" Background="{StaticResource Brush.SessionView.LogListBox.Background}" Grid.Row="1" HorizontalAlignment="Stretch" Items="{Binding Logs}" Padding="{StaticResource Thickness.SessionView.LogListBox.Padding}" ScrollViewer.HorizontalScrollBarVisibility="Visible" SelectionMode="Multiple" VirtualizationMode="Simple">
				<ListBox.Styles>
					<Style Selector="ListBoxItem">
						<Setter Property="HorizontalAlignment" Value="Stretch"/>
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
						<Setter Property="Padding" Value="0"/>
					</Style>
					<Style Selector="ListBoxItem:pressed /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="{DynamicResource Brush.SessionView.LogListBox.Item.Background.Pressed}"/>
					</Style>
					<Style Selector="ListBoxItem:selected /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="{DynamicResource Brush.SessionView.LogListBox.Item.Background.Selected}"/>
					</Style>
					<Style Selector="ListBoxItem:selected:pointerover /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="{DynamicResource Brush.SessionView.LogListBox.Item.Background.Selected.PointerOver}"/>
					</Style>
					<Style Selector="ListBoxItem:selected:pressed /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="{DynamicResource Brush.SessionView.LogListBox.Item.Background.Pressed}"/>
					</Style>
					<Style Selector="TextBlock">
						<Setter Property="FontFamily" Value="Consolas"/>
					</Style>
				</ListBox.Styles>
			</ListBox>

			<!-- Hint: no log to show -->
			<Border Grid.Row="1" IsVisible="{Binding !HasLogs}">
				<TextBlock FontSize="{StaticResource Double.SessionView.Hint.NoLogToShow.FontSize}" HorizontalAlignment="Center" Text="{DynamicResource String.SessionView.NoLogToShow}" TextWrapping="Wrap" VerticalAlignment="Center"/>
			</Border>

		</Grid>

		<!-- Status bar -->
		<Border Background="{StaticResource Brush.SessionView.StatusBar.Background}" Grid.ColumnSpan="3" Grid.Row="3" Padding="{StaticResource Thickness.SessionView.StatucBar.Padding}">
			<ia:Interaction.Behaviors>
				<iaCore:DataTriggerBehavior Binding="{Binding $parent[UserControl].StatusBarState}" ComparisonCondition="Equal" Value="None">
					<iaCore:ChangePropertyAction PropertyName="Background" Value="{StaticResource Brush.SessionView.StatusBar.Background}"/>
				</iaCore:DataTriggerBehavior>
				<iaCore:DataTriggerBehavior Binding="{Binding $parent[UserControl].StatusBarState}" ComparisonCondition="Equal" Value="Active">
					<iaCore:ChangePropertyAction PropertyName="Background" Value="{StaticResource Brush.SessionView.StatusBar.Background.Active}"/>
				</iaCore:DataTriggerBehavior>
				<iaCore:DataTriggerBehavior Binding="{Binding $parent[UserControl].StatusBarState}" ComparisonCondition="Equal" Value="Error">
					<iaCore:ChangePropertyAction PropertyName="Background" Value="{StaticResource Brush.SessionView.StatusBar.Background.Error}"/>
				</iaCore:DataTriggerBehavior>
				<iaCore:DataTriggerBehavior Binding="{Binding $parent[UserControl].StatusBarState}" ComparisonCondition="Equal" Value="Paused">
					<iaCore:ChangePropertyAction PropertyName="Background" Value="{StaticResource Brush.SessionView.StatusBar.Background.Paused}"/>
				</iaCore:DataTriggerBehavior>
			</ia:Interaction.Behaviors>
			<Grid ColumnDefinitions="Auto,Auto,*">

				<!-- Empty view to reserve space -->
				<TextBlock Grid.ColumnSpan="5" Text=" " Opacity="0"/>

				<!-- Number of logs -->
				<StackPanel IsVisible="{Binding HasLogs}" Orientation="Horizontal">
					<TextBlock Text="{DynamicResource String.SessionView.AllLogCount}"/>
					<TextBlock Text="{Binding AllLogCount}"/>
					<TextBlock IsVisible="{Binding IsFilteringLogsNeeded}" Text="{DynamicResource String.SessionView.FilteredLogCount}"/>
					<TextBlock IsVisible="{Binding IsFilteringLogsNeeded}" Text="{Binding FilteredLogCount}"/>
					<Separator Classes="SessionView_StatusBar_Separator"/>
				</StackPanel>

				<!-- Filtering progress -->
				<StackPanel Grid.Column="1" IsVisible="{Binding IsFilteringLogs}" Orientation="Horizontal">
					<TextBlock Text="{DynamicResource String.SessionView.LogsFilteringProgress}"/>
					<TextBlock Text="{Binding LogsFilteringProgress, Converter={x:Static appViewModels:Session.LogsFilteringProgressConverter}}"/>
				</StackPanel>
				
			</Grid>
		</Border>

		<!-- Side panel -->
		<GridSplitter Background="{StaticResource Brush.SessionView.SidePanel.Background}" Grid.Column="1" Grid.Row="2" Width="{StaticResource Double.GridSplitter.Thickness}"/>
		<ScrollViewer Background="{StaticResource Brush.SessionView.SidePanel.Background}" Grid.Column="2" Grid.Row="2"/>

	</Grid>


</UserControl>
