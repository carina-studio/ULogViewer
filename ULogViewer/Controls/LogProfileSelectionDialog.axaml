<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ia="using:Avalonia.Xaml.Interactivity"
        xmlns:iaCore="using:Avalonia.Xaml.Interactions.Core"
        xmlns:appControls="clr-namespace:CarinaStudio.ULogViewer.Controls;assembly=ULogViewer"
        xmlns:appConverters="clr-namespace:CarinaStudio.ULogViewer.Converters;assembly=ULogViewer"
        xmlns:appProfiles="clr-namespace:CarinaStudio.ULogViewer.Logs.Profiles;assembly=ULogViewer"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.ULogViewer.Controls.LogProfileSelectionDialog"
        Classes="Dialog"
        Title="{DynamicResource String/LogProfileSelectionDialog.Title}"
        Width="{DynamicResource Double/LogProfileSelectionDialog.Width}">

	<!-- Styles -->
	<Window.Styles>
		<Style Selector="ListBox.LogProfiles">
			<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate DataType="{x:Type appProfiles:LogProfile}">
						<Border Background="{x:Static Brushes.Transparent}" DoubleTapped="OnLogProfileItemDoubleTapped" Padding="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Padding}">
							<Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,Auto,Auto">

								<!-- Icon -->
								<Panel Grid.RowSpan="3" Height="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Icon.Size}" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Icon.Margin}" VerticalAlignment="Top" Width="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Icon.Size}">
									<Image Classes="Icon" Source="{Binding Icon, Converter={x:Static appConverters:LogProfileIconConverter.Default}}" IsVisible="{Binding !$parent[ListBoxItem].IsSelected}"/>
									<Image Classes="Icon" Source="{Binding Icon, Converter={x:Static appConverters:LogProfileIconConverter.Default}, ConverterParameter=Light}}" IsVisible="{Binding $parent[ListBoxItem].IsSelected}"/>
								</Panel>
								
								<!-- Name -->
								<TextBlock Grid.Column="1" FontSize="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Name.FontSize}" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Name.Margin}" Text="{Binding Name}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>

								<!-- Description -->
								<TextBlock Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" FontSize="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Description.FontSize}" IsVisible="{Binding HasDescription}" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Description.Margin}" MaxLines="5" Opacity="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Description.Opacity}" Text="{Binding Description}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap"/>
								<TextBlock Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" FontSize="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Description.FontSize}" IsVisible="{Binding !HasDescription}" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Description.Margin}" Opacity="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Description.Opacity}" Text="{DynamicResource String/LogProfileSelectionDialog.NoDescription}" TextTrimming="CharacterEllipsis"/>

								<!-- Labels -->
								<WrapPanel Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" Orientation="Horizontal">
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{Binding DataSourceProvider.DisplayName}"/>
									</Border>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label" IsVisible="{Binding IsBuiltIn}">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{DynamicResource String/LogProfileSelectionDialog.BuiltInLogProfile}"/>
									</Border>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label" IsVisible="{Binding IsContinuousReading}">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{DynamicResource String/LogProfileSelectionDialog.IsContinuousReading}"/>
									</Border>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label" IsVisible="{Binding IsWorkingDirectoryNeeded}">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{DynamicResource String/LogProfileSelectionDialog.IsWorkingDirectoryNeeded}"/>
									</Border>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label" IsVisible="{Binding IsAdministratorNeeded}">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{DynamicResource String/LogProfileSelectionDialog.IsAdministratorNeeded}"/>
									</Border>
								</WrapPanel>

								<!-- Actions -->
								<StackPanel Grid.Column="2" Grid.RowSpan="3" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal" VerticalAlignment="Top">
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveLogProfile}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" IsVisible="{Binding !IsBuiltIn}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.RemoveLogProfile}">
										<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.Delete}"/>
									</Button>
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].ExportLogProfile}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.ExportLogProfile}">
										<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.Export}"/>
									</Button>
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].CopyLogProfile}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Copy}">
										<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.Copy}"/>
									</Button>
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditLogProfile}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" IsVisible="{Binding !IsBuiltIn}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.EditLogProfile}">
										<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.Edit}"/>
									</Button>
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].PinUnpinLogProfile}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.PinUnpinLogProfile}">
										<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.Pin}"/>
									</Button>
								</StackPanel>

							</Grid>
						</Border>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
			<Setter Property="VirtualizationMode" Value="None"/>
		</Style>
	</Window.Styles>
	
	<!-- Content -->
	<DockPanel>

		<!-- Control buttons -->
		<Border Classes="Dialog_ControlButtonsPanel" DockPanel.Dock="Bottom">
			<StackPanel Classes="Dialog_ControlButtonsPanel">
				
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].AddLogProfile}" Content="{DynamicResource String/LogProfileSelectionDialog.AddLogProfile}">
					<ia:Interaction.Behaviors>
						<iaCore:DataTriggerBehavior Binding="{Binding $parent[Window].Filter}" Value="{x:Null}">
							<iaCore:ChangePropertyAction PropertyName="IsVisible" Value="True"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $parent[Window].Filter}" ComparisonCondition="NotEqual" Value="{x:Null}">
							<iaCore:ChangePropertyAction PropertyName="IsVisible" Value="False"/>
						</iaCore:DataTriggerBehavior>
					</ia:Interaction.Behaviors>
				</Button>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].ImportLogProfile}" Content="{DynamicResource String/LogProfileSelectionDialog.ImportLogProfile}">
					<ia:Interaction.Behaviors>
						<iaCore:DataTriggerBehavior Binding="{Binding $parent[Window].Filter}" Value="{x:Null}">
							<iaCore:ChangePropertyAction PropertyName="IsVisible" Value="True"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding $parent[Window].Filter}" ComparisonCondition="NotEqual" Value="{x:Null}">
							<iaCore:ChangePropertyAction PropertyName="IsVisible" Value="False"/>
						</iaCore:DataTriggerBehavior>
					</ia:Interaction.Behaviors>
				</Button>
				<Border Width="{DynamicResource Double/Dialog.Separator.Height.Small}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].GenerateResultCommand}" Content="{DynamicResource String/Common.OK}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.Cancel}"/>
			</StackPanel>
		</Border>

		<!-- Log profiles -->
		<ScrollViewer Name="scrollViewer" MaxHeight="{DynamicResource Double/LogProfileSelectionDialog.Content.MaxHeight}">
			<StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">

				<!-- Pinned profiles -->
				<StackPanel HorizontalAlignment="Stretch" IsVisible="{Binding $parent[Window].PinnedLogProfiles.Count}" Orientation="Vertical">
					<TextBlock Classes="Dialog_TextBlock_Header1" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.Label.Margin}" Text="{DynamicResource String/LogProfileSelectionDialog.PinnedLogProfiles}"/>
					<ListBox Name="pinnedLogProfileListBox" Classes="LogProfiles" Items="{Binding $parent[Window].PinnedLogProfiles}" SelectionChanged="OnPinnedLogProfilesSelectionChanged">
						<ListBox.Styles>
							<Style Selector="ListBoxItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								<Setter Property="Margin" Value="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Margin}"/>
								<Setter Property="Padding" Value="0"/>
							</Style>
						</ListBox.Styles>
					</ListBox>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>
				
				<!-- Other profiles -->
				<StackPanel HorizontalAlignment="Stretch" IsVisible="{Binding $parent[Window].OtherLogProfiles.Count}" Orientation="Vertical">
					<TextBlock Classes="Dialog_TextBlock_Header1" IsVisible="{Binding $parent[Window].PinnedLogProfiles.Count}" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.Label.Margin}" Text="{DynamicResource String/LogProfileSelectionDialog.OtherLogProfiles}"/>
					<TextBlock Classes="Dialog_TextBlock_Header1" IsVisible="{Binding !$parent[Window].PinnedLogProfiles.Count}" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.Label.Margin}" Text="{DynamicResource String/LogProfileSelectionDialog.AllLogProfiles}"/>
					<ListBox Name="otherLogProfileListBox" Classes="LogProfiles" Items="{Binding $parent[Window].OtherLogProfiles}" SelectionChanged="OnOtherLogProfilesSelectionChanged">
						<ListBox.Styles>
							<Style Selector="ListBoxItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								<Setter Property="Margin" Value="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Margin}"/>
								<Setter Property="Padding" Value="0"/>
							</Style>
						</ListBox.Styles>
					</ListBox>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>

			</StackPanel>
		</ScrollViewer>
		
	</DockPanel>
	
</Window>
